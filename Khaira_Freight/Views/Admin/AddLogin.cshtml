@model Khaira_Freight.Models.UserTable

@{
    ViewBag.Title = "Add User";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}



<style>
    #required:after { content:" *"; color: #f00; }
   
  
    #btn_style {
        color: #494949 !important;
    
        text-decoration: none;
        background: #ffffff;
        border: 1px solid #494949 !important;
        display: inline-block;
        transition: all 0.4s ease 0s;
    }

        #btn_style:hover {
            color: #ffffff !important;
            background: #f6b93b;
            border-color: #f6b93b !important;
            transition: all 0.4s ease 0s;
        }
         #heading {
                color: #494949 !important;
                text-transform: uppercase;
                text-decoration: none;
                background: #ffffff;
                padding: 20px;
                border: 4px solid #494949 !important;
                display: inline-block;
                transition: all 0.4s ease 0s;
            }

            #heading:hover {
                color: #ffffff !important;
                background: #f6b93b;
                border-color: #f6b93b !important;
                transition: all 0.4s ease 0s;
            }
</style>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    ////
<div class="form-horizontal  breadcrumb" style="        background-color:lavender;
        padding: 30px;
        margin: 50px auto;
        box-shadow: 1px 1px 25px rgba(0, 0, 0, 0.35);
        border-radius: 10px;
        border: 6px solid #305A72;
        width: 100%;
           min-width:min-content;
        ">
    <h2 id="heading">ADD USER</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.RoleId, "RoleId", htmlAttributes: new { @class = "control-label col-md-2", @id = "required" })
        <div class="col-md-10">
            @*@Html.DropDownList("RoleId", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.DropDownListFor(model => model.RoleId, Model.roleList, "--Select--", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmpId, htmlAttributes: new { @class = "control-label col-md-2", @id = "required" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmpId, new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.DropDownListFor(model => model.EmpId, new SelectList(ViewBag.empList), "Select an Id")*@
            @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        <p id="GFG_UP"
           style="        font-size: 19px;
        font-weight: bold;">
        </p>

        @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label col-md-2", @id = "required" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.TextBoxFor(model => model.EmpName, new { id = "uname" }) <button class="btn-primary" onClick="GFG_Fun()">
                Generate Username
            </button>
            @*@Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @id = "randomfield", @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            <div class="col-md-10">
                <p id="GFG_UP"
                   style="        font-size: 19px;
            font-weight: bold;">
                </p>
                <button class="btn-primary" onClick="GFG_Fun()">
                    Generate Username
                </button>
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2", @id = "required" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Username, new { id = "GFG_DOWN" })
            @*@Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @Value = "randomStr(20, '12345abcde')" } })*@
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @id = "required" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { Title = "Password must contain: Minimum 8 and Maximum 20 characters atleast 1 UpperCase Alphabet, 1 LowerCase Alphabet, 1 Number and 1 Special Character", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })


        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.CreatedDate, new { @readonly = "readonly" })
            @*@Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.LastLoginDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastLoginDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastLoginDate, "", new { @class = "text-danger" })
            </div>
        </div>*@



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button class="btn btn-default">
                @Html.ActionLink("Back to List", "IndexLogin")
            </button>

        </div>
    </div>
</div>

}

@section Scripts
    {


    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script>
        var up = document.getElementById('GFG_UP');
        var down = document.getElementById('GFG_DOWN');
        up.innerHTML =
            'Enter First name and click to generate Username';

        function randomStr(len, arr) {
            var ans = '';
            //for (var i = len; i > 0; i--) {
            //    ans +=
            //        arr[Math.floor(Math.random() * arr.length)];
            //}
            ans = arr + Math.floor(Math.random() * 100) + 1;

            return ans;
        }

        function GFG_Fun() {
            //down.text = randomStr(20, '12345abcde');
            var u = $("#uname").val();
            var d= randomStr(10, u);
            $("#GFG_DOWN").val(d);  
 
        }
    </script>
}


