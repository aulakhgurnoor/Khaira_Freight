//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Khaira_Freight.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KhairaFreightEntities : DbContext
    {
        public KhairaFreightEntities()
            : base("name=KhairaFreightEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<employee_login> employee_login { get; set; }
        public virtual DbSet<table_driver> table_driver { get; set; }
        public virtual DbSet<truck> trucks { get; set; }
        public virtual DbSet<dispatch> dispatches { get; set; }
        public virtual DbSet<driver_application> driver_application { get; set; }
        public virtual DbSet<pay_statement> pay_statement { get; set; }
    
        public virtual int add_driver(string first_name, string last_name, string address, string postal_code, string city, string province, string corporation, string phone, Nullable<System.DateTime> dob, string nationality, string gender, string pp_number, string license_number, Nullable<System.DateTime> license_expiry, Nullable<System.DateTime> medical_date, Nullable<decimal> rate, Nullable<decimal> rate_team, ObjectParameter driver_id)
        {
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var postal_codeParameter = postal_code != null ?
                new ObjectParameter("postal_code", postal_code) :
                new ObjectParameter("postal_code", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var provinceParameter = province != null ?
                new ObjectParameter("province", province) :
                new ObjectParameter("province", typeof(string));
    
            var corporationParameter = corporation != null ?
                new ObjectParameter("corporation", corporation) :
                new ObjectParameter("corporation", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("nationality", nationality) :
                new ObjectParameter("nationality", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var pp_numberParameter = pp_number != null ?
                new ObjectParameter("pp_number", pp_number) :
                new ObjectParameter("pp_number", typeof(string));
    
            var license_numberParameter = license_number != null ?
                new ObjectParameter("license_number", license_number) :
                new ObjectParameter("license_number", typeof(string));
    
            var license_expiryParameter = license_expiry.HasValue ?
                new ObjectParameter("license_expiry", license_expiry) :
                new ObjectParameter("license_expiry", typeof(System.DateTime));
    
            var medical_dateParameter = medical_date.HasValue ?
                new ObjectParameter("medical_date", medical_date) :
                new ObjectParameter("medical_date", typeof(System.DateTime));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(decimal));
    
            var rate_teamParameter = rate_team.HasValue ?
                new ObjectParameter("rate_team", rate_team) :
                new ObjectParameter("rate_team", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_driver", first_nameParameter, last_nameParameter, addressParameter, postal_codeParameter, cityParameter, provinceParameter, corporationParameter, phoneParameter, dobParameter, nationalityParameter, genderParameter, pp_numberParameter, license_numberParameter, license_expiryParameter, medical_dateParameter, rateParameter, rate_teamParameter, driver_id);
        }
    
        public virtual ObjectResult<select_driver_Result> select_driver(Nullable<int> driver_id)
        {
            var driver_idParameter = driver_id.HasValue ?
                new ObjectParameter("driver_id", driver_id) :
                new ObjectParameter("driver_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_driver_Result>("select_driver", driver_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> selectAll_driverId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("selectAll_driverId");
        }
    }
}
